openapi: 3.0.1
info:
  title: Workspace Rentals API
  description: |-
    To use the authorized endpoints:
      1. Register a new user
      2. Log in with the user you registered
      3. Copy the token string in the response body
      4. Click "Authorize [padlock-icon]", paste it in the "value" field, then click "Authorize".
  version: v1
servers:
  - url: http://localhost:3000
    description: Sandbox server for testing
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
        email:
          type: string
      required:
        - id
        - username
        - email

    Reservation:
      type: object
      properties:
        id:
          type: integer
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        city:
          type: string
        workspace_id:
          type: integer
        user_id:
          type: integer
      required:
        - id
        - start_date
        - end_date
        - city
        - workspace_id
        - user_id

    Workspace:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        image_url:
          type: string
      required:
        - id
        - name
        - description

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

paths:
  "/api/v1/registrations":
    post:
      summary: Registers a new user
      tags:
        - Users
      responses:
        '201':
          description: user registered successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '400':
          description: user not registered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRegistration'
        description: Username needed to create a new user.

  "/api/v1/reservations":
    get:
      summary: Retrieves all reservations for the current user
      security:
        - bearerAuth: []
      tags:
        - Reservations
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReservationListResponse'

    post:
      parameters:
        - name: workspace
          in: query
          description: Workspace ID
          required: true
          schema:
            type: integer
      summary: Creates a new reservation
      security:
        - bearerAuth: []
      tags:
        - Reservations
      responses:
        '201':
          description: successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReservationResponse'
        '400':
          description: reservation not created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ReservationCreation'

  "/api/v1/reservations/{id}":
    parameters:
      - name: id
        in: path
        description: Reservation ID
        required: true
        schema:
          type: integer
    get:
      summary: Retrieves a specific reservation
      security:
        - bearerAuth: []
      tags:
        - Reservations
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReservationResponse'